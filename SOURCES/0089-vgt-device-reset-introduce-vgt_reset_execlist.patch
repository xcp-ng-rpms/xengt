From 29a7fabcc449b1128921ccfcdaaa9db44f517b57 Mon Sep 17 00:00:00 2001
From: Zhi Wang <zhi.a.wang@intel.com>
Date: Mon, 1 Jun 2015 17:05:30 -0400
Subject: [PATCH 089/403] vgt: device reset: introduce vgt_reset_execlist()

Signed-off-by: Zhi Wang <zhi.a.wang@intel.com>
---
 drivers/gpu/drm/i915/vgt/execlists.c |   27 +++++++++++++++++++++++++++
 drivers/gpu/drm/i915/vgt/instance.c  |   12 ++++--------
 drivers/gpu/drm/i915/vgt/vgt.h       |    1 +
 3 files changed, 32 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/i915/vgt/execlists.c b/drivers/gpu/drm/i915/vgt/execlists.c
index 0c9f467..3221523 100644
--- a/drivers/gpu/drm/i915/vgt/execlists.c
+++ b/drivers/gpu/drm/i915/vgt/execlists.c
@@ -1726,3 +1726,30 @@ bool vgt_g2v_execlist_context_destroy(struct vgt_device *vgt)
 	vgt_destroy_execlist_context(vgt, el_ctx);
 	return rc;
 }
+
+void vgt_reset_execlist(struct vgt_device *vgt, unsigned long ring_bitmap)
+{
+	vgt_state_ring_t *rb;
+	int bit, i;
+
+	for_each_set_bit(bit, &ring_bitmap, sizeof(ring_bitmap)) {
+		if (bit >= vgt->pdev->max_engines)
+			break;
+
+		rb = &vgt->rb[bit];
+
+		memset(&rb->vring, 0, sizeof(vgt_ringbuffer_t));
+		memset(&rb->sring, 0, sizeof(vgt_ringbuffer_t));
+
+		vgt_disable_ring(vgt, bit);
+
+		memset(&rb->elsp_store, 0, sizeof(rb->elsp_store));
+
+		rb->el_slots_head = rb->el_slots_tail = 0;
+		for (i = 0; i < EL_QUEUE_SLOT_NUM; ++ i)
+			memset(&rb->execlist_slots[i], 0,
+					sizeof(struct vgt_exec_list));
+
+		rb->csb_write_ptr = DEFAULT_INV_SR_PTR;
+	}
+}
diff --git a/drivers/gpu/drm/i915/vgt/instance.c b/drivers/gpu/drm/i915/vgt/instance.c
index cf97b29..8bab2ab9 100644
--- a/drivers/gpu/drm/i915/vgt/instance.c
+++ b/drivers/gpu/drm/i915/vgt/instance.c
@@ -485,7 +485,6 @@ static void vgt_reset_ringbuffer(struct vgt_device *vgt, unsigned long ring_bitm
 	int bit;
 
 	for_each_set_bit(bit, &ring_bitmap, sizeof(ring_bitmap)) {
-		int i;
 		if (bit >= vgt->pdev->max_engines)
 			break;
 
@@ -497,14 +496,8 @@ static void vgt_reset_ringbuffer(struct vgt_device *vgt, unsigned long ring_bitm
 		rb->uhptr = 0;
 		rb->request_id = rb->uhptr_id = 0;
 
-		rb->el_slots_head = rb->el_slots_tail = 0;
-		for (i = 0; i < EL_QUEUE_SLOT_NUM; ++ i)
-			memset(&rb->execlist_slots[i], 0,
-				sizeof(struct vgt_exec_list));
-
 		memset(&rb->vring, 0, sizeof(vgt_ringbuffer_t));
 		memset(&rb->sring, 0, sizeof(vgt_ringbuffer_t));
-		rb->csb_write_ptr = DEFAULT_INV_SR_PTR;
 
 		vgt_disable_ring(vgt, bit);
 
@@ -527,7 +520,10 @@ void vgt_reset_virtual_states(struct vgt_device *vgt, unsigned long ring_bitmap)
 {
 	ASSERT(spin_is_locked(&vgt->pdev->lock));
 
-	vgt_reset_ringbuffer(vgt, ring_bitmap);
+	if (!vgt->pdev->enable_execlist)
+		vgt_reset_ringbuffer(vgt, ring_bitmap);
+	else
+		vgt_reset_execlist(vgt, ring_bitmap);
 
 	vgt_reset_ppgtt(vgt, ring_bitmap);
 
diff --git a/drivers/gpu/drm/i915/vgt/vgt.h b/drivers/gpu/drm/i915/vgt/vgt.h
index 4f0be56..5a5dc3c 100644
--- a/drivers/gpu/drm/i915/vgt/vgt.h
+++ b/drivers/gpu/drm/i915/vgt/vgt.h
@@ -2674,6 +2674,7 @@ static inline void vgt_set_all_vreg_bit(struct pgt_device *pdev, unsigned int va
 
 void vgt_reset_virtual_states(struct vgt_device *vgt, unsigned long ring_bitmap);
 void vgt_reset_ppgtt(struct vgt_device *vgt, unsigned long ring_bitmap);
+void vgt_reset_execlist(struct vgt_device *vgt, unsigned long ring_bitmap);
 
 enum vgt_pipe get_edp_input(uint32_t wr_data);
 void vgt_forward_events(struct pgt_device *pdev);
-- 
1.7.10.4

