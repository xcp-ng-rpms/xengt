From 987e3d548db65569d6f91d7820f2690a8d3b3c3f Mon Sep 17 00:00:00 2001
From: Zhiyuan Lv <zhiyuan.lv@intel.com>
Date: Thu, 10 Dec 2015 10:48:18 +0800
Subject: [PATCH 244/403] Fix a potential QEMU crash issue

When we clear the write protection of a page, there is a small window
causing problem. Our current code is to remove the page from ioreq
rangeset, then clear the page type for trap. If there is the page
access inside the small window, it will be trapped into hypervisor,
but the page is not inside ioreq rangeset. Then the page fault will be
directed into QEMU and cause QEMU to exit.

The fix is to change the order of the two hyper-call for "clear wp".

It was found in code review, and no bugs directly related to it. But
earlier we ever met random "privcmd_fault" from QEMU. That may be
related to this problem.

v2:
 - passing constant map/unmap value in function call directly
   since we know that for sure (Kevin)

Cc: Kevin Tian <kevin.tian@intel.com>
Cc: Zhi WAng <zhi.a.wang@intel.com>

Signed-off-by: Zhiyuan Lv <zhiyuan.lv@intel.com>
---
 drivers/xen/xengt.c |   22 +++++++++++++++++-----
 1 file changed, 17 insertions(+), 5 deletions(-)

diff --git a/drivers/xen/xengt.c b/drivers/xen/xengt.c
index 03362fb..f3d7311 100644
--- a/drivers/xen/xengt.c
+++ b/drivers/xen/xengt.c
@@ -382,11 +382,13 @@ static int hvm_wp_page_to_ioreq_server(struct vgt_device *vgt, unsigned long pag
 	start = page << PAGE_SHIFT;
 	end = ((page + 1) << PAGE_SHIFT) - 1;
 
-	rc = hvm_map_io_range_to_ioreq_server(vgt, 1, start, end, set);
-	if (rc < 0) {
-		printk(KERN_ERR "Failed to %s page 0x%lx to ioreq_server: %d!\n",
-			set ? "map":"unmap", page , rc);
-		return rc;
+	if (set) {
+		rc = hvm_map_io_range_to_ioreq_server(vgt, 1, start, end, true);
+		if (rc < 0) {
+			printk(KERN_ERR "Failed to map page 0x%lx to ioreq_server: %d!\n",
+				page , rc);
+			return rc;
+		}
 	}
 
 	mem_type = set ? HVMMEM_mmio_write_dm : HVMMEM_ram_rw;
@@ -396,6 +398,16 @@ static int hvm_wp_page_to_ioreq_server(struct vgt_device *vgt, unsigned long pag
 			set ? "HVMMEM_mmio_write_dm":"HVMMEM_ram_rw");
 		return rc;
 	}
+
+	if (!set) {
+		rc = hvm_map_io_range_to_ioreq_server(vgt, 1, start, end, false);
+		if (rc < 0) {
+			printk(KERN_ERR "Failed to unmap page 0x%lx to ioreq_server: %d!\n",
+				page , rc);
+			return rc;
+		}
+	}
+
 	return rc;
 }
 
-- 
1.7.10.4

