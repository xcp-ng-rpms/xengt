From e24d1b5c2ac13cc1b5598866ad57bbf0a3da5235 Mon Sep 17 00:00:00 2001
From: Jike Song <jike.song@intel.com>
Date: Tue, 11 Aug 2015 15:04:12 +0800
Subject: [PATCH 169/403] host mediation: use spinlock to serialize execution
 of host ISR

Current host mediation has host ISR serialized by queuing it only on CPU0.
By queuing on specified cpu, irq work issues an IPI interrupt with vector
as CALL_FUNCTION_SINGLE_VECTOR. On the interrupted cpu, a handler will be
executed with csd_lock/csd_unlock. Unfortunately this confilicts with
KVMGT, which needs to flush remote TLBs via IPI interrupts, acquiring
same csd lock.

By introducing a new spinlock, the host isr will be executed on the
CPU where physical interrupt happens, and it follows the behaviors
of hardware interrupt controllers.

Signed-off-by: Jike Song <jike.song@intel.com>
---
 drivers/gpu/drm/i915/i915_drv.h |    1 +
 drivers/gpu/drm/i915/i915_irq.c |    5 ++++-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/i915/i915_drv.h b/drivers/gpu/drm/i915/i915_drv.h
index 02eab63..34426de 100644
--- a/drivers/gpu/drm/i915/i915_drv.h
+++ b/drivers/gpu/drm/i915/i915_drv.h
@@ -1973,6 +1973,7 @@ struct drm_i915_private {
 	/* vgt host-side mediation */
 	void *pgt;
 	struct irq_work irq_work;
+	spinlock_t irq_work_lock;
 	struct {
 		irqreturn_t(*irq_handler) (int irq, void *arg);
 		void (*irq_preinstall) (struct drm_device *dev);
diff --git a/drivers/gpu/drm/i915/i915_irq.c b/drivers/gpu/drm/i915/i915_irq.c
index e220a9d..3a09cb1 100644
--- a/drivers/gpu/drm/i915/i915_irq.c
+++ b/drivers/gpu/drm/i915/i915_irq.c
@@ -66,13 +66,15 @@ void i915_isr_wrapper(struct irq_work *work)
 	if (!vgt_can_process_irq())
 		return;
 
+	spin_lock(&dev_priv->irq_work_lock);
 	dev_priv->irq_ops.irq_handler(dev_priv->dev->pdev->irq, dev_priv->dev);
+	spin_unlock(&dev_priv->irq_work_lock);
 }
 
 void vgt_schedule_host_isr(struct drm_device *dev)
 {
 	struct drm_i915_private *dev_priv = dev->dev_private;
-	irq_work_queue_on(&dev_priv->irq_work, 0);
+	irq_work_queue(&dev_priv->irq_work);
 }
 #endif
 
@@ -4432,6 +4434,7 @@ static void vgt_irq_preinstall(struct drm_device *dev)
 	}
 
 	init_irq_work(&dev_priv->irq_work, i915_isr_wrapper);
+	spin_lock_init(&dev_priv->irq_work_lock);
 
 	dev_priv->irq_ops.irq_preinstall(dev);
 }
-- 
1.7.10.4

