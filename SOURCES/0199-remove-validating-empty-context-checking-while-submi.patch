From b2e35f987f8ffe5a47d2db050729fb4bd07e3174 Mon Sep 17 00:00:00 2001
From: Xiaoguang Chen <xiaoguang.chen@intel.com>
Date: Mon, 9 Nov 2015 09:43:26 +0800
Subject: [PATCH 199/403] remove validating empty context checking while
 submiting context

There is case that guest submit workloads through lite-restore, which means guest
driver kept updating tail pointer, since there is no context-done interrupt so guest
context header pointer did not get updated.
By chance the tail pointer equals to header pointer because of the not updated header pointer.
At that time the batch buffer's header and tail keep zero, and the submission was skipped.
We should delete the check for command scan can know whether there are workloads or not.

This fix bug 869.

Signed-off-by: Zhiyuan Lv <zhiyuan.lv@intel.com>
Signed-off-by: Xiaoguang Chen <xiaoguang.chen@intel.com>
---
 drivers/gpu/drm/i915/vgt/execlists.c |   19 -------------------
 1 file changed, 19 deletions(-)

diff --git a/drivers/gpu/drm/i915/vgt/execlists.c b/drivers/gpu/drm/i915/vgt/execlists.c
index ae47d39..29e2495 100644
--- a/drivers/gpu/drm/i915/vgt/execlists.c
+++ b/drivers/gpu/drm/i915/vgt/execlists.c
@@ -1545,29 +1545,10 @@ void vgt_submit_execlist(struct vgt_device *vgt, enum vgt_ring_id ring_id)
 
 	for (i = 0; i < 2; ++ i) {
 		struct execlist_context *ctx = execlist->el_ctxs[i];
-		struct reg_state_ctx_header *guest_state;
 
 		if (ctx == NULL)
 			continue;
 
-		if (vgt_require_shadow_context(vgt)) {
-			guest_state = (struct reg_state_ctx_header *)
-				ctx->ctx_pages[1].guest_page.vaddr;
-		} else {
-			ASSERT(vgt->vm_id == 0);
-			guest_state = vgt_get_reg_state_from_lrca(vgt,
-					ctx->guest_context.lrca);
-		}
-
-		if ((guest_state->ring_tail.val & RB_TAIL_OFF_MASK)
-				== (guest_state->ring_header.val & RB_HEAD_OFF_MASK)) {
-			if ((!guest_state->bb_cur_head_UDW.val
-				&& !guest_state->bb_cur_head_LDW.val) &&
-				(!guest_state->second_bb_addr_UDW.val &&
-				!guest_state->second_bb_addr_LDW.val))
-				continue;
-		}
-
 		memcpy(&context_descs[j++], &ctx->guest_context,
 				sizeof(struct ctx_desc_format));
 
-- 
1.7.10.4

