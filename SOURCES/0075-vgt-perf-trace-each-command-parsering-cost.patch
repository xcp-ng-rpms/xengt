From 0935f8eb0c7e61845b572488c7da6cf834a5cd8a Mon Sep 17 00:00:00 2001
From: Zhi Wang <zhi.a.wang@intel.com>
Date: Wed, 13 May 2015 23:11:31 +0800
Subject: [PATCH 075/403] vgt: perf: trace each command parsering cost

Signed-off-by: Zhi Wang <zhi.a.wang@intel.com>
---
 drivers/gpu/drm/i915/vgt/cmd_parser.c |   13 ++++++++++---
 drivers/gpu/drm/i915/vgt/trace.h      |    7 ++++---
 2 files changed, 14 insertions(+), 6 deletions(-)

diff --git a/drivers/gpu/drm/i915/vgt/cmd_parser.c b/drivers/gpu/drm/i915/vgt/cmd_parser.c
index 41c2465..f6c5acf 100644
--- a/drivers/gpu/drm/i915/vgt/cmd_parser.c
+++ b/drivers/gpu/drm/i915/vgt/cmd_parser.c
@@ -2341,7 +2341,7 @@ static int cmd_hash_init(struct pgt_device *pdev)
 	return 0;
 }
 
-static void trace_cs_command(struct parser_exec_state *s)
+static void trace_cs_command(struct parser_exec_state *s, cycles_t cost_pre_cmd_handler, cycles_t cost_cmd_handler)
 {
 	/* This buffer is used by ftrace to store all commands copied from guest gma
 	* space. Sometimes commands can cross pages, this should not be handled in
@@ -2368,7 +2368,7 @@ static void trace_cs_command(struct parser_exec_state *s)
 		cmd_trace_buf[i] = cmd_val(s, i);
 
 	trace_vgt_command(s->vgt->vm_id, s->ring_id, s->ip_gma, cmd_trace_buf,
-			cmd_len, s->buf_type == RING_BUFFER_INSTRUCTION);
+			cmd_len, s->buf_type == RING_BUFFER_INSTRUCTION, cost_pre_cmd_handler, cost_cmd_handler);
 
 }
 
@@ -2378,6 +2378,9 @@ static int vgt_cmd_parser_exec(struct parser_exec_state *s)
 	struct cmd_info *info;
 	uint32_t cmd;
 	int rc = 0;
+	cycles_t t0, t1, t2;
+
+	t0 = get_cycles();
 
 	hypervisor_read_va(s->vgt, s->ip_va, &cmd, sizeof(cmd), 1);
 
@@ -2410,7 +2413,7 @@ static int vgt_cmd_parser_exec(struct parser_exec_state *s)
 	}
 	klog_printk("\n");
 #endif
-	trace_cs_command(s);
+	t1 = get_cycles();
 
 	if (info->handler) {
 		int post_handle = 0;
@@ -2438,6 +2441,10 @@ static int vgt_cmd_parser_exec(struct parser_exec_state *s)
 		}
 	}
 
+	t2 = get_cycles();
+
+	trace_cs_command(s, t1 - t0, t2 -t1);
+
 	if (!(info->flag & F_IP_ADVANCE_CUSTOM)) {
 		rc = vgt_cmd_advance_default(s);
 		if (rc < 0) {
diff --git a/drivers/gpu/drm/i915/vgt/trace.h b/drivers/gpu/drm/i915/vgt/trace.h
index d0e734a..bfbb288 100644
--- a/drivers/gpu/drm/i915/vgt/trace.h
+++ b/drivers/gpu/drm/i915/vgt/trace.h
@@ -23,6 +23,7 @@
 #include <linux/types.h>
 #include <linux/stringify.h>
 #include <linux/tracepoint.h>
+#include <asm/tsc.h>
 
 #undef TRACE_SYSTEM
 #define TRACE_SYSTEM vgt
@@ -62,9 +63,9 @@ TRACE_EVENT(vgt_mmio_rw,
 
 #define MAX_CMD_STR_LEN	200
 TRACE_EVENT(vgt_command,
-		TP_PROTO(u8 vm_id, u8 ring_id, u32 ip_gma, u32 *cmd_va, u32 cmd_len, bool ring_buffer_cmd),
+		TP_PROTO(u8 vm_id, u8 ring_id, u32 ip_gma, u32 *cmd_va, u32 cmd_len, bool ring_buffer_cmd, cycles_t cost_pre_cmd_handler, cycles_t cost_cmd_handler),
 
-		TP_ARGS(vm_id, ring_id, ip_gma, cmd_va, cmd_len, ring_buffer_cmd),
+		TP_ARGS(vm_id, ring_id, ip_gma, cmd_va, cmd_len, ring_buffer_cmd, cost_pre_cmd_handler, cost_cmd_handler),
 
 		TP_STRUCT__entry(
 			__field(u8, vm_id)
@@ -78,7 +79,7 @@ TRACE_EVENT(vgt_command,
 			__entry->vm_id = vm_id;
 			__entry->ring_id = ring_id;
 			__entry->cmd_str[0] = '\0';
-			snprintf(__entry->tmp_buf, MAX_CMD_STR_LEN, "VM(%d) Ring(%d): %s ip(%08x) ", vm_id, ring_id, ring_buffer_cmd ? "RB":"BB", ip_gma);
+			snprintf(__entry->tmp_buf, MAX_CMD_STR_LEN, "VM(%d) Ring(%d): %s ip(%08x) pre handler cost (%llu), handler cost (%llu) ", vm_id, ring_id, ring_buffer_cmd ? "RB":"BB", ip_gma, cost_pre_cmd_handler, cost_cmd_handler);
 			strcat(__entry->cmd_str, __entry->tmp_buf);
 			entry->i = 0;
 			while (cmd_len > 0) {
-- 
1.7.10.4

