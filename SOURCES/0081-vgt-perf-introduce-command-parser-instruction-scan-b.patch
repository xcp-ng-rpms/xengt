From 1076a83583d107d089ea7916a7180d6090bc0f29 Mon Sep 17 00:00:00 2001
From: Zhi Wang <zhi.a.wang@intel.com>
Date: Fri, 15 May 2015 18:04:08 -0400
Subject: [PATCH 081/403] vgt: perf: introduce command parser instruction scan
 buffer

Signed-off-by: Zhi Wang <zhi.a.wang@intel.com>
---
 drivers/gpu/drm/i915/vgt/cmd_parser.c |   42 +++++++++++++++++++++++++++++----
 drivers/gpu/drm/i915/vgt/cmd_parser.h |    3 +++
 drivers/gpu/drm/i915/vgt/vgt.c        |    3 +++
 drivers/gpu/drm/i915/vgt/vgt.h        |    1 +
 4 files changed, 45 insertions(+), 4 deletions(-)

diff --git a/drivers/gpu/drm/i915/vgt/cmd_parser.c b/drivers/gpu/drm/i915/vgt/cmd_parser.c
index 950844e..d565a47 100644
--- a/drivers/gpu/drm/i915/vgt/cmd_parser.c
+++ b/drivers/gpu/drm/i915/vgt/cmd_parser.c
@@ -526,12 +526,24 @@ static inline uint32_t *cmd_ptr(struct parser_exec_state *s, int index)
 		return s->ip_va_next_page + (index - s->ip_buf_len);
 }
 
+static inline uint32_t *cmd_buf_ptr(struct parser_exec_state *s, int index)
+{
+	ASSERT(s->ip_buf_va);
+
+	return s->ip_buf_va + index;
+}
+
 static inline uint32_t cmd_val(struct parser_exec_state *s, int index)
 {
-	uint32_t *addr = cmd_ptr(s, index);
+	uint32_t *addr;
 	uint32_t ret = 0;
 
-	hypervisor_read_va(s->vgt, addr, &ret, sizeof(ret), 1);
+	if (s->ip_buf) {
+		ret = *cmd_buf_ptr(s, index);
+	} else {
+		addr = cmd_ptr(s, index);
+		hypervisor_read_va(s->vgt, addr, &ret, sizeof(ret), 1);
+	}
 
 	return ret;
 }
@@ -604,6 +616,14 @@ static int ip_gma_set(struct parser_exec_state *s, unsigned long ip_gma)
 		return -EFAULT;
 	}
 
+	if (s->ip_buf) {
+		hypervisor_read_va(s->vgt, s->ip_va, s->ip_buf,
+				s->ip_buf_len * sizeof(uint32_t), 1);
+		hypervisor_read_va(s->vgt, s->ip_va_next_page, s->ip_buf + s->ip_buf_len * sizeof(uint32_t),
+				PAGE_SIZE, 1);
+		s->ip_buf_va = s->ip_buf;
+	}
+
 	return 0;
 }
 
@@ -614,6 +634,8 @@ static inline int ip_gma_advance(struct parser_exec_state *s, unsigned int len)
 		/* not cross page, advance ip inside page */
 		s->ip_gma += len*sizeof(uint32_t);
 		s->ip_va += len;
+		if (s->ip_buf)
+			s->ip_buf_va += len;
 		s->ip_buf_len -= len;
 	} else {
 		/* cross page, reset ip_va */
@@ -2388,7 +2410,7 @@ static int vgt_cmd_parser_exec(struct parser_exec_state *s)
 
 	t0 = get_cycles();
 
-	hypervisor_read_va(s->vgt, s->ip_va, &cmd, sizeof(cmd), 1);
+	cmd = cmd_val(s, 0);
 
 	info = vgt_get_cmd_info(cmd, s->ring_id);
 	if (info == NULL) {
@@ -2506,9 +2528,18 @@ static int __vgt_scan_vring(struct vgt_device *vgt, int ring_id, vgt_reg_t head,
 		return 0;
 	}
 
+	if (cmd_parser_ip_buf) {
+		s.ip_buf = kmalloc(PAGE_SIZE * 2, GFP_ATOMIC);
+		if (!s.ip_buf) {
+			vgt_err("fail to allocate buffer page.\n");
+			return -ENOMEM;
+		}
+	} else
+		s.ip_buf = s.ip_buf_va = NULL;
+
 	rc = ip_gma_set(&s, base + head);
 	if (rc < 0)
-		return rc;
+		goto out;
 
 	klog_printk("ring buffer scan start on ring %d\n", ring_id);
 	vgt_dbg(VGT_DBG_CMD, "scan_start: start=%lx end=%lx\n", gma_head, gma_tail);
@@ -2555,6 +2586,9 @@ static int __vgt_scan_vring(struct vgt_device *vgt, int ring_id, vgt_reg_t head,
 
 	klog_printk("ring buffer scan end on ring %d\n", ring_id);
 	vgt_dbg(VGT_DBG_CMD, "scan_end\n");
+out:
+	if (s.ip_buf)
+		kfree(s.ip_buf);
 	return rc;
 }
 
diff --git a/drivers/gpu/drm/i915/vgt/cmd_parser.h b/drivers/gpu/drm/i915/vgt/cmd_parser.h
index 09c61cb..202eab0 100644
--- a/drivers/gpu/drm/i915/vgt/cmd_parser.h
+++ b/drivers/gpu/drm/i915/vgt/cmd_parser.h
@@ -481,6 +481,9 @@ struct parser_exec_state {
 	bool cmd_issue_irq;
 
 	struct cmd_info* info;
+
+	uint32_t *ip_buf_va;
+	void *ip_buf;
 };
 
 #define CMD_TAIL_NUM	1024
diff --git a/drivers/gpu/drm/i915/vgt/vgt.c b/drivers/gpu/drm/i915/vgt/vgt.c
index b99167b..6de68bd 100644
--- a/drivers/gpu/drm/i915/vgt/vgt.c
+++ b/drivers/gpu/drm/i915/vgt/vgt.c
@@ -143,6 +143,9 @@ module_param_named(bypass_scan, bypass_scan_mask, int, 0600);
 bool bypass_dom0_addr_check = false;
 module_param_named(bypass_dom0_addr_check, bypass_dom0_addr_check, bool, 0600);
 
+bool cmd_parser_ip_buf = true;
+module_param_named(cmd_parser_ip_buf, cmd_parser_ip_buf, bool, 0600);
+
 bool enable_panel_fitting = true;
 module_param_named(enable_panel_fitting, enable_panel_fitting, bool, 0600);
 
diff --git a/drivers/gpu/drm/i915/vgt/vgt.h b/drivers/gpu/drm/i915/vgt/vgt.h
index 2618e49..4f0be56 100644
--- a/drivers/gpu/drm/i915/vgt/vgt.h
+++ b/drivers/gpu/drm/i915/vgt/vgt.h
@@ -92,6 +92,7 @@ extern bool irq_based_ctx_switch;
 extern int preallocated_shadow_pages;
 extern int preallocated_oos_pages;
 extern bool spt_out_of_sync;
+extern bool cmd_parser_ip_buf;
 
 enum vgt_event_type {
 	// GT
-- 
1.7.10.4

