From ce50bab53649b806353504bce990038343b1cac0 Mon Sep 17 00:00:00 2001
From: Zhiyuan Lv <zhiyuan.lv@intel.com>
Date: Mon, 9 Mar 2015 17:12:40 +0800
Subject: [PATCH 002/403] Revice the execlist dump

Signed-off-by: Zhiyuan Lv <zhiyuan.lv@intel.com>
---
 drivers/gpu/drm/i915/vgt/debugfs.c |   31 +++++++++++++++++++++++++
 drivers/gpu/drm/i915/vgt/utility.c |   44 ++++++++++++++++++++++--------------
 2 files changed, 58 insertions(+), 17 deletions(-)

diff --git a/drivers/gpu/drm/i915/vgt/debugfs.c b/drivers/gpu/drm/i915/vgt/debugfs.c
index 0d0b4a5..a51dfa4 100644
--- a/drivers/gpu/drm/i915/vgt/debugfs.c
+++ b/drivers/gpu/drm/i915/vgt/debugfs.c
@@ -884,6 +884,32 @@ static const struct file_operations vgt_el_status_fops = {
 	.release = single_release,
 };
 
+static int vgt_el_context_show(struct seq_file *m, void *data)
+{
+	struct pgt_device *pdev = (struct pgt_device *)m->private;
+	unsigned long flags;
+
+	spin_lock_irqsave(&pdev->lock, flags);
+	dump_all_el_contexts(pdev);
+	spin_unlock_irqrestore(&pdev->lock, flags);
+
+	seq_printf(m, "\n");
+
+	return 0;
+}
+
+static int vgt_el_context_open(struct inode *inode, struct file *file)
+{
+	return single_open(file, vgt_el_context_show, inode->i_private);
+}
+
+static const struct file_operations vgt_el_context_fops = {
+	.open = vgt_el_context_open,
+	.read = seq_read,
+	.llseek = seq_lseek,
+	.release = single_release,
+};
+
 /* initialize vGT debufs top directory */
 struct dentry *vgt_init_debugfs(struct pgt_device *pdev)
 {
@@ -914,6 +940,11 @@ struct dentry *vgt_init_debugfs(struct pgt_device *pdev)
 	if (!temp_d)
 		return NULL;
 
+	temp_d = debugfs_create_file("show_el_context", 0444, d_vgt_debug,
+		pdev, &vgt_el_context_fops);
+	if (!temp_d)
+		return NULL;
+
 	for ( i = 0; stat_info[i].stat != NULL; i++ ) {
 		temp_d = debugfs_create_u64(stat_info[i].node_name,
 			0444,
diff --git a/drivers/gpu/drm/i915/vgt/utility.c b/drivers/gpu/drm/i915/vgt/utility.c
index cfc0d72..0efb8a7 100644
--- a/drivers/gpu/drm/i915/vgt/utility.c
+++ b/drivers/gpu/drm/i915/vgt/utility.c
@@ -1077,22 +1077,33 @@ static void dump_ctx_status_buf_entry(struct vgt_device *vgt,
 		status.udw = __vreg(vgt, ctx_status_reg + 4);
 	}
 
-	printk("-- Context Status Buffer (%d) for ring %d --\n",
-			buf_entry, ring_id);
-	printk("\t context_id:0x%x\n", status.context_id);
-	printk("\t idle_to_active: %d\n", status.idle_to_active);
-	printk("\t preempted: %d\n", status.preempted);
-	printk("\t element_switch: %d\n", status.element_switch);
-	printk("\t active_to_idle: %d\n", status.active_to_idle);
-	printk("\t context_complete: %d\n", status.context_complete);
-	printk("\t wait_on_sync_flip: %d\n", status.wait_on_sync_flip);
-	printk("\t wait_on_vblank: %d\n", status.wait_on_vblank);
-	printk("\t wait_on_semaphore: %d\n", status.wait_on_semaphore);
-	printk("\t wait_on_scanline: %d\n", status.wait_on_scanline);
-	printk("\t semaphore_wait_mode: %d\n", status.semaphore_wait_mode);
-	printk("\t display_plane: %d\n", status.display_plane);
-	printk("\t lite_restore	: %d\n", status.lite_restore);
-	printk("\n");
+	printk("    ring-%d CSB[%d]: ctx(0x%08x) val(0x%08x) <set bits: ",
+			ring_id, buf_entry, status.context_id, status.ldw);
+	if (status.idle_to_active)
+		printk("idle_to_active; ");
+	if (status.preempted)
+		printk("preemptedn; ");
+	if (status.element_switch)
+		printk("element_switch; ");
+	if (status.active_to_idle)
+		printk("active_to_idle; ");
+	if (status.context_complete)
+		printk("context_complete; ");
+	if (status.wait_on_sync_flip)
+		printk("wait_on_sync_flip; ");
+	if (status.wait_on_vblank)
+		printk("wait_on_vblank; ");
+	if (status.wait_on_semaphore)
+		printk("wait_on_semaphore; ");
+	if (status.wait_on_scanline)
+		printk("wait_on_scanline; ");
+	if (status.semaphore_wait_mode)
+		printk("semaphore_wait_mode; ");
+	if (status.display_plane)
+		printk("display_plane; ");
+	if (status.lite_restore)
+		printk("lite_restore; ");
+	printk(">\n");
 }
 
 static void dump_ctx_st_ptr(struct vgt_device *vgt, struct ctx_st_ptr_format *ptr)
@@ -1295,5 +1306,4 @@ void dump_el_status(struct pgt_device *pdev)
 			dump_el_queue(vgt, ring_id);
 		}
 	}
-	dump_all_el_contexts(pdev);
 }
-- 
1.7.10.4

