From d9ce36a4c2a26a748a3c83af47bdc845e72f8411 Mon Sep 17 00:00:00 2001
From: Yulei Zhang <yulei.zhang@intel.com>
Date: Wed, 13 Jul 2016 14:06:11 +0800
Subject: [PATCH 415/417] Revert "Add 64 bpp RGB support for Windows 10
 guests."

This reverts commit 271a574e3ec2a636cc80bad25672f9b4259478df.
---
 drivers/gpu/drm/i915/vgt/fb_decoder.c |   17 +----------------
 include/uapi/drm/drm_fourcc.h         |    8 --------
 2 files changed, 1 insertion(+), 24 deletions(-)

diff --git a/drivers/gpu/drm/i915/vgt/fb_decoder.c b/drivers/gpu/drm/i915/vgt/fb_decoder.c
index 7e886a1..fd83bde 100644
--- a/drivers/gpu/drm/i915/vgt/fb_decoder.c
+++ b/drivers/gpu/drm/i915/vgt/fb_decoder.c
@@ -38,7 +38,6 @@ static struct pixel_format hsw_pixel_formats[FORMAT_NUM] = {
 	[0b0110]  = {DRM_FORMAT_XRGB8888, 32, "32-bit BGRX (8:8:8:8 MSB-X:R:G:B)"},
 	[0b1000]  = {DRM_FORMAT_XBGR2101010, 32, "32-bit RGBX (2:10:10:10 MSB-X:B:G:R)"},
 	[0b1010] = {DRM_FORMAT_XRGB2101010, 32, "32-bit BGRX (2:10:10:10 MSB-X:R:G:B)"},
-	[0b1100] = {DRM_FORMAT_XRGB161616_VGT, 64, "64-bit RGBX Floating Point(16:16:16:16 MSB-X:B:G:R)"},
 	[0b1110] = {DRM_FORMAT_XBGR8888, 32, "32-bit RGBX (8:8:8:8 MSB-X:B:G:R)"},
 };
 
@@ -58,9 +57,6 @@ static struct pixel_format skl_pixel_formats[] = {
 	{DRM_FORMAT_XBGR2101010, 32, "32-bit RGBX (2:10:10:10 MSB-X:B:G:R)"},
 	{DRM_FORMAT_XRGB2101010, 32, "32-bit BGRX (2:10:10:10 MSB-X:R:G:B)"},
 
-	{DRM_FORMAT_XRGB161616_VGT, 64, "64-bit XRGB (16:16:16:16 MSB-X:R:G:B)"},
-	{DRM_FORMAT_XBGR161616_VGT, 64, "64-bit XBGR (16:16:16:16 MSB-X:B:G:R)"},
-
 	/* non-supported format has bpp default to 0 */
 	{0, 0, NULL},
 };
@@ -76,13 +72,12 @@ static struct pixel_format hsw_pixel_formats_sprite[FORMAT_NUM_SRRITE] = {
 	[0b000]  = {DRM_FORMAT_YUV422, 16, "YUV 16-bit 4:2:2 packed"},
 	[0b001]  = {DRM_FORMAT_XRGB2101010, 32, "RGB 32-bit 2:10:10:10"},
 	[0b010]  = {DRM_FORMAT_XRGB8888, 32, "RGB 32-bit 8:8:8:8"},
-	[0b011]  = {DRM_FORMAT_XRGB161616_VGT, 64, "RGB 64-bit 16:16:16:16 Floating Point"},
 	[0b100] = {DRM_FORMAT_AYUV, 32, "YUV 32-bit 4:4:4 packed (8:8:8:8 MSB-X:Y:U:V)"},
 };
 
 static int skl_format_to_drm(int format, bool rgb_order, bool alpha, int yuv_order)
 {
-	int skl_pixel_formats_index = 14;
+	int skl_pixel_formats_index = 12;
 
 	switch (format) {
 	case PLANE_CTL_FORMAT_INDEXED:
@@ -110,14 +105,6 @@ static int skl_format_to_drm(int format, bool rgb_order, bool alpha, int yuv_ord
 		else
 			skl_pixel_formats_index = 11;
 		break;
-
-	case PLANE_CTL_FORMAT_XRGB_16161616F:
-		if (rgb_order)
-			skl_pixel_formats_index = 12;
-		else
-			skl_pixel_formats_index = 13;
-		break;
-
 	case PLANE_CTL_FORMAT_YUV422:
 		skl_pixel_formats_index = yuv_order >> 16;
 		if (skl_pixel_formats_index > 3)
@@ -190,8 +177,6 @@ int vgt_get_pixel_format_preskl(u32 plane_ctl,
 				drm_format = DRM_FORMAT_XBGR2101010;
 			else if (drm_format == DRM_FORMAT_XRGB8888)
 				drm_format = DRM_FORMAT_XBGR8888;
-			else if (drm_format == DRM_FORMAT_XRGB161616_VGT)
-				drm_format = DRM_FORMAT_XBGR161616_VGT;
 		}
 
 		if (drm_format == DRM_FORMAT_YUV422) {
diff --git a/include/uapi/drm/drm_fourcc.h b/include/uapi/drm/drm_fourcc.h
index d226af2..8c5e8b9 100644
--- a/include/uapi/drm/drm_fourcc.h
+++ b/include/uapi/drm/drm_fourcc.h
@@ -94,14 +94,6 @@
 #define DRM_FORMAT_RGBA1010102	fourcc_code('R', 'A', '3', '0') /* [31:0] R:G:B:A 10:10:10:2 little endian */
 #define DRM_FORMAT_BGRA1010102	fourcc_code('B', 'A', '3', '0') /* [31:0] B:G:R:A 10:10:10:2 little endian */
 
-/* 64 bpp RGB, below two items is add by VGT project, the reason as below:
- * 1. Current version DRM code is not contains 64 bpp RGB definations.
- * 2. VGT should support 64 bpp RGB for Windows 10 guest.
- * 3. VGT add the 64 bpp RGB definations temperarily, before the DRM code add these definations.
- */
-#define DRM_FORMAT_XRGB161616_VGT  fourcc_code('X', 'R', '4', '8') /* [63:0] x:R:G:B 16:16:16:16 little endian */
-#define DRM_FORMAT_XBGR161616_VGT  fourcc_code('X', 'B', '4', '8') /* [63:0] x:B:G:R 16:16:16:16 little endian */
-
 /* packed YCbCr */
 #define DRM_FORMAT_YUYV		fourcc_code('Y', 'U', 'Y', 'V') /* [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian */
 #define DRM_FORMAT_YVYU		fourcc_code('Y', 'V', 'Y', 'U') /* [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian */
-- 
1.7.10.4

