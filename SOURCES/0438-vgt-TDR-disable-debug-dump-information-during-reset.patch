From bf1e6e2d7ec1d42fffb42105aa1b47e3138fca94 Mon Sep 17 00:00:00 2001
From: fred gao <fred.gao@intel.com>
Date: Mon, 14 Nov 2016 09:00:36 +0800
Subject: [PATCH 438/446] vgt/TDR: disable debug dump information during reset

the time-consuming debug dump information with lock held  will block
other VMs running and trigger other VMs TDR.

the debug information can be dumped with flag i915.enable_reset = false.

v2: per Zheng,xiao' comments:
1. add comments on how to enable these debug print in commit message.
2. add comments on why disable dump information before the change code.

Signed-off-by: fred gao <fred.gao@intel.com>
Reviewed-by: Zheng, Xiao <xiao.zheng@intel.com>
---
 drivers/gpu/drm/i915/vgt/render.c  |   10 ++++++++--
 drivers/gpu/drm/i915/vgt/utility.c |   24 ++++++++++++++++++++++++
 2 files changed, 32 insertions(+), 2 deletions(-)

diff --git a/drivers/gpu/drm/i915/vgt/render.c b/drivers/gpu/drm/i915/vgt/render.c
index cdaf547..a835605 100644
--- a/drivers/gpu/drm/i915/vgt/render.c
+++ b/drivers/gpu/drm/i915/vgt/render.c
@@ -729,7 +729,6 @@ out:
 	ret = true;
 	return ret;
 err:
-	dump_regs_on_err(pdev);
 	/* TODO: any cleanup for context switch errors? */
 	vgt_err("Ring-%d: (%lldth checks %lldth switch<%d->%d>)\n",
 			i, vgt_ctx_check(pdev), vgt_ctx_switch(pdev),
@@ -747,9 +746,16 @@ err:
 			vgt_dom0->rb[i].sring.start);
 	show_ring_debug(pdev, i);
 	show_ring_buffer(pdev, i, 16 * sizeof(vgt_reg_t));
-	if (!enable_reset)
+	if (!enable_reset) {
+		/*
+		* the time-consuming debug dump information with lock held
+		* will block other VMs running and trigger other VMs TDR.
+		* disable it in reset path.
+		*/
+		dump_regs_on_err(pdev);
 		/* crash system now, to avoid causing more confusing errors */
 		ASSERT(0);
+	}
 
 	if (pdev->enable_execlist) {
 		if (vgt_do_engine_reset(pdev, ring_id)) {
diff --git a/drivers/gpu/drm/i915/vgt/utility.c b/drivers/gpu/drm/i915/vgt/utility.c
index 01b03dc..f83e85f 100644
--- a/drivers/gpu/drm/i915/vgt/utility.c
+++ b/drivers/gpu/drm/i915/vgt/utility.c
@@ -128,6 +128,14 @@ void execlist_show_ring_debug(struct pgt_device *pdev, int ring_id)
 {
 	int i;
 
+	/*
+	* the time-consuming debug dump information with lock held
+	* will block other VMs running and trigger other VMs TDR.
+	* disable it in reset path.
+	*/
+	if (enable_reset)
+		return;
+
 	for (i = 0; i < VGT_MAX_VMS; i++) {
 		struct vgt_device *vgt;
 
@@ -487,6 +495,14 @@ void execlist_show_ring_buffer(struct pgt_device *pdev, int ring_id, int bytes)
 
 	printk("....LRCA: %lx.\n", val);
 
+	/*
+	* the time-consuming debug dump information with lock held
+	* will block other VMs running and trigger other VMs TDR.
+	* disable it in reset path.
+	*/
+	if (enable_reset)
+		return;
+
 	if (!val)
 		return;
 
@@ -1430,6 +1446,14 @@ void dump_el_status(struct pgt_device *pdev)
 {
 	enum vgt_ring_id ring_id;
 
+	/*
+	* the time-consuming debug dump information with lock held
+	* will block other VMs running and trigger other VMs TDR.
+	* disable it in reset path.
+	*/
+	if (enable_reset)
+		return;
+
 	for (ring_id = RING_BUFFER_RCS; ring_id < MAX_ENGINES; ++ ring_id) {
 		int i;
 		dump_execlist_info(pdev, ring_id);
-- 
1.7.10.4

